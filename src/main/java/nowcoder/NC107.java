package nowcoder;

/**
 * NC107 寻找峰值
 * 描述
 * 山峰元素是指其值大于或等于左右相邻值的元素。给定一个输入数组nums，任意两个相邻元素值不相等，数组可能包含多个山峰。
 * 找到索引最大的那个山峰元素并返回其索引。
 *
 * 输入：
 * [2,4,1,2,7,8,4]
 * 返回值：
 * 5
 */
public class NC107 {

    public static void main(String[] args) {
        int[] a = {};
        System.out.println(solve(a));
    }

    /**
     * 寻找最后的山峰
     * @param a int整型一维数组
     * @return int整型
     */
    public static int solve (int[] a) {
        // write code here
        int index = a.length - 1;
        if (a[index] > a[index-1]){
            return index;
        }
        index--;
        while (index > 0){
            if (a[index] > a[index-1]){
                if (a[index] > a[index+1]){
                    return index;
                }
                index -= 2;
                continue;
            }
            index--;
        }
        return index > 0 ? index : 0;
    }
}
